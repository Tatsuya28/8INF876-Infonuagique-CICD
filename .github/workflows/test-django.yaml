name: Django CI & MySQL Test

on:
  workflow_call:
  workflow_dispatch:

  # push:
  #   branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]

jobs:
  django_mysql_test:

    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./src

    env:
      DJANGO_SECRET_KEY: not-good-to-be-fixed
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DB: test_django_cicd_db
      MYSQL_USER: myuser
      MYSQL_PASSWORD: mypassword
      MYSQL_HOST: 127.0.0.1
      MYSQL_PORT: 3306
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    services:
      mysql_main:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: ${{ env.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ env.MYSQL_DB }}
          MYSQL_USER: ${{ env.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ env.MYSQL_PASSWORD }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.13] # can be a list of versions

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run Tests
      env:
        MYSQL_DB: ${{ env.MYSQL_DB }}
        MYSQL_USER: ${{ env.MYSQL_USER }}
        MYSQL_PASSWORD: ${{ env.MYSQL_PASSWORD }}
        MYSQL_HOST: ${{ env.MYSQL_HOST }}
        MYSQL_PORT: ${{ env.MYSQL_PORT }}
        MYSQL_IGNORE_SSL: "true"
        
      run: |
        python manage.py test --noinput
