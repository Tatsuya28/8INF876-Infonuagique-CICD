name: Build Docker container and push to DO registry

on:
  workflow_call:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test_django_mysql_job: 
    uses: Tatsuya28/8INF876-Infonuagique-CICD/.github/workflows/test-django.yaml@main

  build:
    runs-on: ubuntu-latest
    needs: [test_django_mysql_job]

    env:
      DJANGO_SECRET_KEY: not-good-to-be-fixed
      CLUSTER_NAME: k8s-django-cicd
    
    
    steps:
    - name: Clone repository code
      uses: actions/checkout@v4
    
    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

    - name: Login to DigitalOcean Container Registry with short-lived credentials
      run: doctl registry login --expiry-seconds 1200

    - name: Get short SHA
      run: |
        SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)
        echo "SHORT_SHA=${SHORT_SHA}" >> $GITHUB_ENV

    - name: Build container image
      working-directory: ./src
      run: |
        docker build -f Dockerfile \
          -t registry.digitalocean.com/uqac-8inf876/django-cicd-src:latest \
          -t registry.digitalocean.com/uqac-8inf876/django-cicd-src:${{ env.SHORT_SHA }} \
          .

    - name: Push container image to DO registry
      run: |
        docker push registry.digitalocean.com/uqac-8inf876/django-cicd-src --all-tags

    - name: Set up kubectl with DigitalOcean Kubernetes cluster config file with short-lived credentials
      run: |
        doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ env.CLUSTER_NAME }}

    - name: Update Kubernetes deployment with new image
      run: |
        kubectl set image deployment/django-cicd-src-deployment \
          django-cicd-src=registry.digitalocean.com/uqac-8inf876/django-cicd-src:${{ env.SHORT_SHA }}

    - name: Wait for deployment rollout to finish
      run: |
        kubectl rollout status deployment/django-cicd-src-deployment 

    - name: Migrate database command
      run: |
        export SINGLE_POD_NAME=$(kubectl get pods -o jsonpath="{.items[0].metadata.name}")
        kubectl exec $SINGLE_POD_NAME -- bash /app/migrate.sh